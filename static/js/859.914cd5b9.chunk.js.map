{"version":3,"file":"static/js/859.914cd5b9.chunk.js","mappings":"+PAGaA,EAAaC,EAAAA,GAAAA,KAAH,yGAOVC,EAAcD,EAAAA,GAAAA,MAAH,iEAKXE,EAAYF,EAAAA,GAAAA,OAAH,mYAiBTG,EAAaH,EAAAA,GAAAA,GAAH,6HAQVI,GAAaJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,kJ,kBC1BR,SAASM,IAAU,IAAD,EAE/B,GAA2BC,EAAAA,EAAAA,UAAS,IAApC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAUMC,EAAM,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAuB7C,OAtBAC,QAAQC,IAAIH,IAEZI,EAAAA,EAAAA,YAAU,WACR,GAAKJ,EAGL,KACEK,EAAAA,EAAAA,IAAeL,GAAQM,MAAK,SAAAC,GACW,IAAjCA,EAASC,KAAKC,QAAQC,OAM1BhB,EAASa,EAASC,KAAKC,SALrBE,EAAAA,OAAAA,QAAA,iEAMH,GAGF,CAFC,MAAOC,GACPD,EAAAA,OAAAA,QAAe,6BAChB,CACF,GAAE,CAACX,IACJE,QAAQC,IAAIV,IAGV,iCACE,UAACT,EAAD,CAAY6B,SAjCI,SAAAC,GAClBA,EAAIC,iBACCD,EAAIE,cAAc,GAAGC,MAGxBlB,EAAgB,CAAEC,OAAQc,EAAIE,cAAc,GAAGC,QAF/CN,EAAAA,OAAAA,KAAY,gBAIf,EA0BG,WACE,SAACzB,EAAD,CAAagC,KAAK,UAClB,SAAC/B,EAAD,CAAW+B,KAAK,SAAhB,wBAEF,SAAC9B,EAAD,UACGK,EAAO0B,KAAI,SAAAC,GAAU,IAAD,EAEnB,OADAlB,QAAQC,IAAIiB,EAAMC,aAEhB,yBACE,UAAChC,EAAD,CACEiC,GAAE,UAAKF,EAAMG,IACbC,MAAO,CAAEC,KAAM9B,GACfuB,KAAMzB,EAHR,UAKG,IALH,UAMG2B,EAAMM,aANT,QAMkBN,EAAMO,SAPjBP,EAAMG,GAWlB,QAIR,C","sources":["pages/Movies/MoviesStyled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  margin-top: 10px;\n  gap: 10px;\n`;\n\nexport const StyledInput = styled.input`\n  padding: 5px;\n  border-radius: 10px;\n`;\n\nexport const StyledBtn = styled.button`\n  padding: 5px;\n  width: 100px;\n  border-radius: 10px;\n  text-decoration: none;\n  background-color: #e2e2e2;\n  color: black;\n  text-align: center;\n  font-size: 20px;\n  :hover {\n    background-color: #fc7d07;\n    color: #fff;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n      0px 2px 1px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const StyledList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-left: 5px;\n  margin-top: 10px;\n`;\n\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  font-size: 18px;\n  font-weight: 500;\n  :hover {\n    color: #fc7d07;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { getFilmByQuery } from 'components/api';\n\nimport { useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport {\n  StyledForm,\n  StyledInput,\n  StyledBtn,\n  StyledList,\n  StyledLink,\n} from './MoviesStyled';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nexport default function Movies() {\n  // const [formValue, setFormValue] = useState('');\n  const [movies, setMovie] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const changeValue = evt => {\n    evt.preventDefault();\n    if (!evt.currentTarget[0].value) {\n      Notify.info('enter request');\n    } else {\n      setSearchParams({ filter: evt.currentTarget[0].value });\n    }\n  };\n  const filter = searchParams.get('filter') ?? '';\n  console.log(filter);\n\n  useEffect(() => {\n    if (!filter) {\n      return;\n    }\n    try {\n      getFilmByQuery(filter).then(response => {\n        if (response.data.results.length === 0) {\n          Notify.failure(\n            `We don't have any results rof this keyword, please try another`\n          );\n          return;\n        }\n        setMovie(response.data.results);\n      });\n    } catch (error) {\n      Notify.failure('Opps... Something wrong(((');\n    }\n  }, [filter]);\n  console.log(movies);\n\n  return (\n    <>\n      <StyledForm onSubmit={changeValue}>\n        <StyledInput type=\"text\" />\n        <StyledBtn type=\"submit\">Search</StyledBtn>\n      </StyledForm>\n      <StyledList>\n        {movies.map(movie => {\n          console.log(movie.media_type);\n          return (\n            <li key={movie.id}>\n              <StyledLink\n                to={`${movie.id}`}\n                state={{ from: location }}\n                type={movies}\n              >\n                {' '}\n                {movie.title ?? movie.name}\n              </StyledLink>\n            </li>\n          );\n        })}\n      </StyledList>\n    </>\n  );\n}\n"],"names":["StyledForm","styled","StyledInput","StyledBtn","StyledList","StyledLink","NavLink","Movies","useState","movies","setMovie","location","useLocation","useSearchParams","searchParams","setSearchParams","filter","get","console","log","useEffect","getFilmByQuery","then","response","data","results","length","Notify","error","onSubmit","evt","preventDefault","currentTarget","value","type","map","movie","media_type","to","id","state","from","title","name"],"sourceRoot":""}