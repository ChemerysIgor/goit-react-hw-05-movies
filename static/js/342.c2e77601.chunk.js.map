{"version":3,"file":"static/js/342.c2e77601.chunk.js","mappings":"4LAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,0IClBWC,EAAWT,EAAAA,GAAAA,GAAH,8IAIRU,EAAKV,EAAAA,GAAAA,GAAH,6J,kBCCA,SAASW,IACtB,OAAwBC,EAAAA,EAAAA,YAAxB,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,GATAE,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAYL,GAASM,MAAK,SAAAC,GAAI,OAAIR,EAAQQ,EAAKC,KAAKV,KAAtB,GAG/B,CAFC,MAAOW,GACPP,QAAQC,IAAIM,EACb,CACF,GAAE,CAACT,IAECF,EAGL,OACE,+BACE,SAACH,EAAD,UACGG,EAAKY,KAAI,SAAAC,GACR,IAAMC,EAAUD,EAAME,aAAN,yCACsBF,EAAME,cACxCC,EAEJ,OACE,UAACpB,EAAD,YACE,gBAAKqB,IAAKH,EAASI,IAAI,GAAGC,MAAM,WAChC,UAACjC,EAAA,EAAD,CAAKkC,EAAE,MAAP,WACE,uBAAIP,EAAMQ,QACV,wCAAgBR,EAAMS,kBAJXT,EAAMU,GAQxB,OAIR,C","sources":["components/Box.js","components/Cast/CastStyled.js","components/Cast/cast.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import styled from 'styled-components';\n\nexport const CastItem = styled.li`\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n`;\nexport const UL = styled.ul`\n  display: grid;\n  grid-template-columns: 250px 250px 250px 250px;\n  grid-gap: 10px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmCast } from '../api';\nimport defaultImage from '../../image/default-img.png';\nimport { CastItem, UL } from './CastStyled';\nimport { Box } from 'components/Box';\n\nexport default function Cast() {\n  const [cast, setCast] = useState();\n  const { movieId } = useParams();\n  console.log(movieId);\n  useEffect(() => {\n    try {\n      getFilmCast(movieId).then(resp => setCast(resp.data.cast));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  if (!cast) {\n    return;\n  }\n  return (\n    <>\n      <UL>\n        {cast.map(actor => {\n          const profile = actor.profile_path\n            ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n            : defaultImage;\n\n          return (\n            <CastItem key={actor.id}>\n              <img src={profile} alt=\"\" width=\"250px\" />\n              <Box p=\"5px\">\n                <p>{actor.name}</p>\n                <p>Character : {actor.character}</p>\n              </Box>\n            </CastItem>\n          );\n        })}\n      </UL>\n    </>\n  );\n}\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","CastItem","UL","Cast","useState","cast","setCast","movieId","useParams","console","log","useEffect","getFilmCast","then","resp","data","error","map","actor","profile","profile_path","defaultImage","src","alt","width","p","name","character","id"],"sourceRoot":""}