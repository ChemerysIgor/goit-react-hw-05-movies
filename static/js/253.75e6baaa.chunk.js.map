{"version":3,"file":"static/js/253.75e6baaa.chunk.js","mappings":"4LAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,qIC+DF,UA3EqB,WAAO,IAAD,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkBJ,EAAAA,EAAAA,UAAQ,UAACG,EAASE,aAAV,aAAC,EAAgBC,MAApCC,GAAP,eAEMC,EAAY,OAAGD,QAAH,IAAGA,EAAAA,EAAW,IAYhC,IAVAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAYZ,GAASa,MAAK,SAAAC,GACxBV,EAASU,EAASC,KACnB,GAGF,CAFC,MAAOC,GACPC,EAAAA,OAAAA,QAAe,QAChB,CACF,GAAE,CAACjB,IAEU,OAAVG,EAAJ,CAGA,IAAMe,EAASf,EAAMgB,YAAN,yCACuBhB,EAAMgB,aACxCC,EACEC,EAAQlB,EAAMmB,aAAaC,QAAQ,GAEzC,OADAC,QAAQC,IAAItB,IAEV,UAAC,IAAD,CAAKuB,EAAE,OAAOC,QAAQ,OAAOC,QAAQ,OAArC,WACE,SAACC,EAAD,CAAgBC,GAAIpB,EAApB,sBAEA,UAAC,IAAD,CACEiB,QAAQ,OACRI,oBAAoB,YACpBC,SAAS,QACTJ,QAAQ,OAJV,WAME,gBAAKK,IAAKf,EAAQgB,IAAI,MAEtB,UAAC,IAAD,YACE,wBAAK/B,EAAMgC,SACX,uCAAuB,GAARd,EAAf,QACA,sCACA,uBAAIlB,EAAMiC,YACV,oCAEA,SAAC,IAAD,CAAKC,GAAI,KAAMV,QAAQ,OAAOC,QAAQ,OAAtC,SACGzB,EAAMmC,OAAOC,KAAI,SAAAC,GAChB,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACvB,aAKP,UAAC,IAAD,CAAKC,aAAa,kBAAlB,WACE,mDACA,UAAC,IAAD,CACEN,GAAI,KACJV,QAAQ,OACRI,oBAAoB,cACpBH,QAAQ,OACRgB,GAAG,MACHC,GAAG,MACHC,GAAG,OAPL,WASE,SAACjB,EAAD,CAAgBC,GAAG,OAAnB,mBACA,SAACD,EAAD,CAAgBC,GAAG,UAAnB,4BAGJ,SAAC,EAAAiB,SAAD,WACE,SAAC,KAAD,QAjDL,CAqDF,EAID,IAAMlB,GAAiBtC,EAAAA,EAAAA,IAAOyD,EAAAA,GAAPzD,CAAH,uZ","sources":["components/Box.js","pages/MovieDetails/Details.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getFilmById } from '../../components/api';\nimport defaultImage from 'image/default-img.png';\nimport styled from 'styled-components';\nimport { Box } from 'components/Box';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const [navPath] = useState(location.state?.from);\n\n  const backLinkHref = navPath ?? '/';\n\n  useEffect(() => {\n    try {\n      getFilmById(movieId).then(response => {\n        setMovie(response.data);\n      });\n    } catch (error) {\n      Notify.failure('OOOPS');\n    }\n  }, [movieId]);\n\n  if (movie === null) {\n    return;\n  }\n  const poster = movie.poster_path\n    ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n    : defaultImage;\n  const score = movie.vote_average.toFixed(1);\n  console.dir(movie);\n  return (\n    <Box p=\"15px\" display=\"grid\" gridGap=\"10px\">\n      <StyledBackLink to={backLinkHref}>Go back</StyledBackLink>\n\n      <Box\n        display=\"grid\"\n        gridTemplateColumns=\"250px 1fr\"\n        maxWidth=\"600px\"\n        gridGap=\"10px\"\n      >\n        <img src={poster} alt=\"\" />\n\n        <Box>\n          <h2>{movie.title}</h2>\n          <p>User score {score * 10}%</p>\n          <h3>Overview</h3>\n          <p>{movie.overview}</p>\n          <h3>Genres</h3>\n\n          <Box as={'ul'} display=\"flex\" gridGap=\"10px\">\n            {movie.genres.map(genre => {\n              return <li key={genre.id}>{genre.name}</li>;\n            })}\n          </Box>\n        </Box>\n      </Box>\n\n      <Box borderBottom=\"1px solid black\">\n        <p>Additional information</p>\n        <Box\n          as={'ul'}\n          display=\"grid\"\n          gridTemplateColumns=\"100px 100px\"\n          gridGap=\"10px\"\n          pl=\"5px\"\n          mt=\"5px\"\n          mb=\"10px\"\n        >\n          <StyledBackLink to=\"cast\">Cast</StyledBackLink>\n          <StyledBackLink to=\"reviews\">Reviews</StyledBackLink>\n        </Box>\n      </Box>\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nexport default MovieDetails;\n\nconst StyledBackLink = styled(NavLink)`\n  margin-top: 40px;\n  padding: 5px;\n  width: 100px;\n  border-radius: 10px;\n  text-decoration: none;\n  background-color: #e2e2e2;\n  color: black;\n  text-align: center;\n  font-size: 18px;\n  :hover {\n    background-color: #fc7d07;\n    color: #fff;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n      0px 2px 1px rgba(0, 0, 0, 0.2);\n  }\n`;\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","movieId","useParams","useState","movie","setMovie","location","useLocation","state","from","navPath","backLinkHref","useEffect","getFilmById","then","response","data","error","Notify","poster","poster_path","defaultImage","score","vote_average","toFixed","console","dir","p","display","gridGap","StyledBackLink","to","gridTemplateColumns","maxWidth","src","alt","title","overview","as","genres","map","genre","name","id","borderBottom","pl","mt","mb","Suspense","NavLink"],"sourceRoot":""}