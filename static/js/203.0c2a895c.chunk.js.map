{"version":3,"file":"static/js/203.0c2a895c.chunk.js","mappings":"oOAIe,SAASA,IACtB,OAA6BC,EAAAA,EAAAA,YAA7B,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OARAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAcH,GAASI,MAAK,SAAAC,GAAI,OAAIN,EAAUM,EAAKC,KAAKC,OAAxB,GAGjC,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACR,KAGF,+BACE,gBAAKW,SAAS,SAAd,SACGb,GACC,eAAIc,GAAI,KAAR,SACGd,EAAQe,KAAI,SAAAN,GACX,OACE,2BACE,qCAAaA,EAAOO,WACpB,uBAAIP,EAAOQ,YAFJR,EAAOS,GAKnB,OAGH,wEAKT,C","sources":["components/Review/review.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getFilmRewiev } from '../api';\n\nexport default function Rewiev() {\n  const [reviews, setReview] = useState();\n  const { movieId } = useParams();\n  useEffect(() => {\n    try {\n      getFilmRewiev(movieId).then(resp => setReview(resp.data.review));\n    } catch (error) {\n      console.log(error);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      <div maxWidth=\"1000px\">\n        {reviews ? (\n          <ul as={'ul'}>\n            {reviews.map(review => {\n              return (\n                <li key={review.id}>\n                  <h3>Author: {review.author}</h3>\n                  <p>{review.content}</p>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </div>\n    </>\n  );\n}\n"],"names":["Rewiev","useState","reviews","setReview","movieId","useParams","useEffect","getFilmRewiev","then","resp","data","review","error","console","log","maxWidth","as","map","author","content","id"],"sourceRoot":""}