{"version":3,"file":"static/js/821.0482758f.chunk.js","mappings":"kRAYaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,I,SC6DF,EAzEqB,WAAO,IAAD,EACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAkBJ,EAAAA,EAAAA,UAAQ,UAACG,EAASE,aAAV,aAAC,EAAgBC,MAApCC,GAAP,eAEMC,EAAY,OAAGD,QAAH,IAAGA,EAAAA,EAAW,IAYhC,IAVAE,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAYZ,GAASa,MAAK,SAAAC,GACxBV,EAASU,EAASC,KACnB,GAGF,CAFC,MAAOC,GACPC,EAAAA,OAAAA,QAAe,QAChB,CACF,GAAE,CAACjB,IACJkB,QAAQC,IAAIhB,GACRA,EAAO,CACT,IAAMiB,EAASjB,EAAMkB,YAAN,yCACuBlB,EAAMkB,aACxCC,EACEC,EAAQpB,EAAMqB,aAAaC,QAAQ,GAEzC,OADAP,QAAQQ,IAAIvB,IAEV,iBAAKwB,EAAE,OAAOC,QAAQ,OAAOC,QAAQ,OAArC,WACE,SAACC,EAAD,CAAgBC,GAAIrB,EAApB,sBAEA,UAACpB,EAAD,CACEsC,QAAQ,OACRI,oBAAoB,YACpBC,SAAS,QACTJ,QAAQ,OAJV,WAME,gBAAKK,IAAKd,EAAQe,IAAI,MAEtB,4BACE,wBAAKhC,EAAMiC,SACX,uCAAuB,GAARb,EAAf,QACA,sCACA,uBAAIpB,EAAMkC,YACV,oCAEA,gBAAKC,GAAI,KAAMV,QAAQ,OAAOC,QAAQ,OAAtC,SACG1B,EAAMoC,OAAOC,KAAI,SAAAC,GAChB,OAAO,wBAAoBA,EAAMC,MAAjBD,EAAME,GACvB,aAKP,UAACrD,EAAD,CAAKsD,aAAa,kBAAlB,WACE,mDACA,UAACtD,EAAD,CACEgD,GAAI,KACJV,QAAQ,OACRI,oBAAoB,cACpBH,QAAQ,OACRgB,GAAG,MACHC,GAAG,MACHC,GAAG,OAPL,WASE,SAACjB,EAAD,CAAgBC,GAAG,OAAnB,mBACA,SAACD,EAAD,CAAgBC,GAAG,UAAnB,4BAGJ,SAAC,EAAAiB,SAAD,WACE,SAAC,KAAD,QAIP,CACF,EAGKlB,GAAiBvC,EAAAA,EAAAA,IAAO0D,EAAAA,GAAP1D,CAAH,uZ","sources":["components/Box.js","pages/MovieDetails/Details.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position\n);\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getFilmById } from 'components/api';\nimport defaultImage from 'image/default-img.png';\nimport styled from 'styled-components';\nimport { Box } from 'components/Box';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const location = useLocation();\n  const [navPath] = useState(location.state?.from);\n\n  const backLinkHref = navPath ?? '/';\n\n  useEffect(() => {\n    try {\n      getFilmById(movieId).then(response => {\n        setMovie(response.data);\n      });\n    } catch (error) {\n      Notify.failure('OOOPS');\n    }\n  }, [movieId]);\n  console.log(movie);\n  if (movie) {\n    const poster = movie.poster_path\n      ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n      : defaultImage;\n    const score = movie.vote_average.toFixed(1);\n    console.dir(movie);\n    return (\n      <div p=\"15px\" display=\"grid\" gridGap=\"10px\">\n        <StyledBackLink to={backLinkHref}>Go back</StyledBackLink>\n\n        <Box\n          display=\"grid\"\n          gridTemplateColumns=\"250px 1fr\"\n          maxWidth=\"600px\"\n          gridGap=\"10px\"\n        >\n          <img src={poster} alt=\"\" />\n\n          <div>\n            <h2>{movie.title}</h2>\n            <p>User score {score * 10}%</p>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n            <h3>Genres</h3>\n\n            <div as={'ul'} display=\"flex\" gridGap=\"10px\">\n              {movie.genres.map(genre => {\n                return <li key={genre.id}>{genre.name}</li>;\n              })}\n            </div>\n          </div>\n        </Box>\n\n        <Box borderBottom=\"1px solid black\">\n          <p>Additional information</p>\n          <Box\n            as={'ul'}\n            display=\"grid\"\n            gridTemplateColumns=\"100px 100px\"\n            gridGap=\"10px\"\n            pl=\"5px\"\n            mt=\"5px\"\n            mb=\"10px\"\n          >\n            <StyledBackLink to=\"cast\">Cast</StyledBackLink>\n            <StyledBackLink to=\"reviews\">Reviews</StyledBackLink>\n          </Box>\n        </Box>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    );\n  }\n};\nexport default MovieDetails;\n\nconst StyledBackLink = styled(NavLink)`\n  margin-top: 20px;\n  padding: 5px;\n  width: 100px;\n  border-radius: 10px;\n  text-decoration: none;\n  background-color: #e2e2e2;\n  color: black;\n  text-align: center;\n  font-size: 18px;\n  :hover {\n    background-color: #fc7d07;\n    color: #fff;\n    box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n      0px 2px 1px rgba(0, 0, 0, 0.2);\n  }\n`;\n"],"names":["Box","styled","color","space","layout","flexbox","grid","background","border","position","movieId","useParams","useState","movie","setMovie","location","useLocation","state","from","navPath","backLinkHref","useEffect","getFilmById","then","response","data","error","Notify","console","log","poster","poster_path","defaultImage","score","vote_average","toFixed","dir","p","display","gridGap","StyledBackLink","to","gridTemplateColumns","maxWidth","src","alt","title","overview","as","genres","map","genre","name","id","borderBottom","pl","mt","mb","Suspense","NavLink"],"sourceRoot":""}